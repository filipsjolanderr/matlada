# docker-compose.yml

version: '3.8'

services:
  app:
    # Build the image from the Dockerfile in the current directory
    build: .
    restart: always
    command: >
      php artisan octane:frankenphp
      --host=0.0.0.0
      --port=8000
      --workers=auto
      --max-requests=500

    environment:
      # Use variables from the .env file
      SERVER_NAME: ${APP_URL:-:80}
      # Pass database credentials to the app
      DB_CONNECTION: ${DB_CONNECTION:-pgsql}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-laravel}
      DB_USERNAME: ${DB_USERNAME:-sail}
      DB_PASSWORD: ${DB_PASSWORD:-password}
    depends_on:
      db:
        condition: service_healthy # Wait for the database to be ready
    volumes:
      - storage-app:/app/storage

  reverb:
    build: .
    restart: always
    command: >
      php artisan reverb:start
    environment:
      # App URL for URL generation in notifications, etc.
      APP_URL: ${APP_URL}
      # Reverb configuration
      REVERB_APP_KEY: ${REVERB_APP_KEY}
      # Bind address/port for the Reverb server inside the container
      REVERB_SERVER_HOST: 0.0.0.0
      REVERB_SERVER_PORT: 8080
      # Public endpoint clients should use (typically your domain over 443)
      REVERB_HOST: ${REVERB_HOST}
      REVERB_PORT: ${REVERB_PORT:-443}
      REVERB_SCHEME: ${REVERB_SCHEME:-https}
      REVERB_SECRET: ${REVERB_SECRET:-}
      # Database (if needed by the websocket server)
      DB_CONNECTION: ${DB_CONNECTION:-pgsql}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-laravel}
      DB_USERNAME: ${DB_USERNAME:-sail}
      DB_PASSWORD: ${DB_PASSWORD:-password}
    # No host port publications; Traefik/Dokploy will route traffic internally
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - storage-app:/app/storage
    networks:
      - dokploy-network

  # PostgreSQL Database Service
  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      # Persist database data
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE:-laravel}
      POSTGRES_USER: ${DB_USERNAME:-sail}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    # Do not publish the database port in production
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-sail} -d ${DB_DATABASE:-laravel}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dokploy-network

# Named volumes for data persistence
volumes:
  db-data:
  storage-app:
